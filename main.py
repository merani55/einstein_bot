from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import re

# –î–∞–Ω—ñ –∫–≤–µ—Å—Ç—É
QUEST_POINTS = [
    {
        "text": (
            "–¢–æ—á–∫–∞ 1 ‚Äî –ü–æ—á–∞—Ç–æ–∫ —à–ª—è—Ö—É\n\n"
            "¬´–£ –∫–æ–∂–Ω—ñ–π —Ñ–æ—Ä–º—É–ª—ñ ‚Äî —ñ—Å—Ç–æ—Ä—ñ—è. –£ –∫–æ–∂–Ω—ñ–π –≤—É–ª–∏—Ü—ñ ‚Äî —Å–µ–∫—Ä–µ—Ç.¬ª\n\n"
            "–ó–∞–≤–¥–∞–Ω–Ω—è: –ó–Ω–∞–π–¥–∏ –≤—É–ª–∏—Ü—é, –¥–µ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–∞—à –∫–≤–µ—Å—Ç, –Ω–∞ —á–µ—Å—Ç—å –≤–µ–ª–∏–∫–æ–≥–æ –≤—á–µ–Ω–æ–≥–æ. "
            "–ù–∞–∑–≤–∏ —ó—ó —Ç–æ—á–Ω–æ."
        ),
        "answer": "m√ºllerstra√üe",
        "hint": "–¶–µ –≤—É–ª–∏—Ü—è, –¥–µ –∂–∏–≤ –ï–π–Ω—à—Ç–µ–π–Ω —É –ú—é–Ω—Ö–µ–Ω—ñ."
    },
    {
        "text": (
            "–¢–æ—á–∫–∞ 2 ‚Äî –Ü–Ω—Å—Ç–∏—Ç—É—Ç –æ–ø—Ç–∏–∫–∏\n\n"
            "¬´–°–≤—ñ—Ç–ª–æ ‚Äî —Ü–µ –Ω–∞–π—à–≤–∏–¥—à–∏–π –ø–æ—Å–ª–∞–Ω–µ—Ü—å.¬ª\n\n"
            "–ó–∞–≤–¥–∞–Ω–Ω—è: –ù–∞–∑–≤–∏ –∫–æ–ª–∏—à–Ω—î –º—ñ—Å—Ü–µ –Ü–Ω—Å—Ç–∏—Ç—É—Ç—É –æ–ø—Ç–∏–∫–∏ –≤ –ú—é–Ω—Ö–µ–Ω—ñ."
        ),
        "answer": "gabelsbergerstra√üe",
        "hint": "–Ü–Ω—Å—Ç–∏—Ç—É—Ç –∑–Ω–∞—Ö–æ–¥–∏–≤—Å—è –Ω–∞ —á–µ—Å—Ç—å –≤–∏–¥–∞—Ç–Ω–æ–≥–æ –Ω—ñ–º–µ—Ü—å–∫–æ–≥–æ –ª—ñ–Ω–≥–≤—ñ—Å—Ç–∞, –Ω–∞ –≤—É–ª–∏—Ü—ñ, —â–æ –Ω–æ—Å–∏—Ç—å –π–æ–≥–æ –ø—Ä—ñ–∑–≤–∏—â–µ."
    },
    {
        "text": (
            "–¢–æ—á–∫–∞ 3 ‚Äî –ì—ñ–º–Ω–∞–∑—ñ—è –õ—é—Ç–ø–æ–ª—å–¥–∞\n\n"
            "¬´–¢—É—Ç —Ñ–æ—Ä–º—É—î—Ç—å—Å—è –º–∞–π–±—É—Ç–Ω—î ‚Äî —É —Å—Ç—ñ–Ω–∞—Ö, –¥–µ –Ω–∞–≤—á–∞–≤—Å—è –≥–µ–Ω—ñ–π.¬ª\n\n"
            "–ó–∞–≤–¥–∞–Ω–Ω—è: –Ø–∫ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è –≥—ñ–º–Ω–∞–∑—ñ—è, –¥–µ –Ω–∞–≤—á–∞–≤—Å—è –ï–π–Ω—à—Ç–µ–π–Ω?"
        ),
        "answer": ["luitpold-gymnasium", "luitpold gymnasium"],
        "hint": "–ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∏—Ç—å 'luitpold' —ñ 'gymnasium'."
    },
    # ... —ñ–Ω—à—ñ —Ç–æ—á–∫–∏ ...
    {
        "text": (
            "–¢–æ—á–∫–∞ 9 ‚Äî –ú—ñ—Å—Ü–µ —Ä—ñ–≤–Ω–æ–≤–∞–≥–∏\n\n"
            "¬´–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø—Ä–∏–≤–µ–ª–∞ –º–µ–Ω–µ –¥–æ —Ä–∏–Ω–∫—É ‚Äî –º—ñ—Å—Ü—è, –¥–µ –≤—Å–µ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ.¬ª\n\n"
            "–ó–∞–≤–¥–∞–Ω–Ω—è: –¢—É—Ç –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ —Å–∏–º–µ—Ç—Ä—ñ—é –≤ —Ö–∞–æ—Å—ñ. –ü—Ä–æ–¥—É–∫—Ç–∏ —ñ —Ñ–æ—Ä–º—É–ª–∏ —Ç—É—Ç –ø–æ—î–¥–Ω—É—é—Ç—å—Å—è –≤ –≥–∞—Ä–º–æ–Ω—ñ—ó. "
            "–ï–π–Ω—à—Ç–µ–π–Ω –ª—é–±–∏–≤ –ø–æ—Ä—è–¥–æ–∫, –∞ —Ç—É—Ç ‚Äî –π–æ–≥–æ –∂–∏–≤–∞ —Ñ–æ—Ä–º–∞. –í—ñ–¥–≥–∞–¥–∞–π –Ω–∞–∑–≤—É —Ü—å–æ–≥–æ —ñ—Å—Ç–æ—Ä–∏—á–Ω–æ–≥–æ –º—ñ—Å—Ü—è –ú—é–Ω—Ö–µ–Ω–∞.\n\n"
            "üìå _–ü—ñ–¥–∫–∞–∑–∫–∞ (–∑–∞ –∑–∞–ø–∏—Ç–æ–º):_ –í —Ü–µ–Ω—Ç—Ä—ñ –º—ñ—Å—Ç–∞, –¥–µ –∑–∞–ø–∞—Ö–∏ —ñ –∫–æ–ª—å–æ—Ä–∏ —Ç–≤–æ—Ä—è—Ç—å —Å–∏–º—Ñ–æ–Ω—ñ—é, –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è —Ç–∞ –∑–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è –ø–æ–¥–æ—Ä–æ–∂—ñ."
        ),
        "answer": "viktualienmarkt",
        "hint": "–í —Ü–µ–Ω—Ç—Ä—ñ –º—ñ—Å—Ç–∞, –¥–µ –∑–∞–ø–∞—Ö–∏ —ñ –∫–æ–ª—å–æ—Ä–∏ —Ç–≤–æ—Ä—è—Ç—å —Å–∏–º—Ñ–æ–Ω—ñ—é, –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è —Ç–∞ –∑–∞–∫—ñ–Ω—á—É—é—Ç—å—Å—è –ø–æ–¥–æ—Ä–æ–∂—ñ."
    }
]

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ–∂–Ω–æ–≥–æ –≥—Ä–∞–≤—Ü—è: user_id -> —ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ—ó —Ç–æ—á–∫–∏
user_progress = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_progress[user_id] = 0
    await update.message.reply_text(
        "–í—ñ—Ç–∞—î–º–æ —É –∫–≤–µ—Å—Ç—ñ ¬´–ö–æ–¥ –ï–π–Ω—à—Ç–µ–π–Ω–∞¬ª! –ü–æ—á–∏–Ω–∞—î–º–æ –∑ –ø–µ—Ä—à–æ—ó —Ç–æ—á–∫–∏.\n\n" +
        QUEST_POINTS[0]["text"]
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in user_progress:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—á–Ω—ñ—Ç—å –∫–≤–µ—Å—Ç –∫–æ–º–∞–Ω–¥–æ—é /start")
        return

    current_index = user_progress[user_id]
    if current_index >= len(QUEST_POINTS):
        await update.message.reply_text("–í–∏ –ø—Ä–æ–π—à–ª–∏ –≤–µ—Å—å –∫–≤–µ—Å—Ç! –í—ñ—Ç–∞—î–º–æ!")
        return

    user_answer = update.message.text.lower().strip()

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ ‚Äî –≤—Ä–∞—Ö–æ–≤—É—î –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π (—Å–ø–∏—Å–æ–∫ –∞–±–æ —Ä—è–¥–æ–∫)
    correct_answer = QUEST_POINTS[current_index]["answer"]
    if isinstance(correct_answer, list):
        is_correct = any(user_answer == ans for ans in correct_answer)
    else:
        is_correct = (user_answer == correct_answer)

    # –î–æ–¥–∞—Ç–∫–æ–≤–æ - –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –Ω–æ—Ä–º–∞–ª—ñ–∑–∞—Ü—ñ—é (–≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–æ–±—ñ–ª—ñ–≤, –∑–Ω–∞–∫—ñ–≤)
    def normalize(s):
        return re.sub(r"[\s\-]", "", s.lower())
    normalized_answer = normalize(user_answer)
    if isinstance(correct_answer, list):
        is_correct = any(normalize(ans) == normalized_answer for ans in correct_answer)
    else:
        is_correct = (normalize(correct_answer) == normalized_answer)

    if is_correct:
        user_progress[user_id] += 1
        if user_progress[user_id] == len(QUEST_POINTS):
            await update.message.reply_text("–í—ñ—Ç–∞—î–º–æ! –í–∏ –ø—Ä–æ–π—à–ª–∏ –≤–µ—Å—å –∫–≤–µ—Å—Ç!")
        else:
            next_point_text = QUEST_POINTS[user_progress[user_id]]["text"]
            await update.message.reply_text(
                "–í—ñ—Ä–Ω–æ! " +
                next_point_text
            )
    else:
        await update.message.reply_text(
            "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å '–ø—ñ–¥–∫–∞–∑–∫–∞' –¥–ª—è –¥–æ–ø–æ–º–æ–≥–∏."
        )

async def hint(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in user_progress:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—á–Ω—ñ—Ç—å –∫–≤–µ—Å—Ç –∫–æ–º–∞–Ω–¥–æ—é /start")
        return

    current_index = user_progress[user_id]
    if current_index >= len(QUEST_POINTS):
        await update.message.reply_text("–í–∏ –ø—Ä–æ–π—à–ª–∏ –≤–µ—Å—å –∫–≤–µ—Å—Ç, –ø—ñ–¥–∫–∞–∑–∫–∏ –≤–∂–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ.")
        return

    hint_text = QUEST_POINTS[current_index]["hint"]
    await update.message.reply_text(f"–ü—ñ–¥–∫–∞–∑–∫–∞: {hint_text}")

def main():
    application = ApplicationBuilder().token("YOUR_BOT_TOKEN_HERE").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("–ø—ñ–¥–∫–∞–∑–∫–∞", hint))
    application.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

    application.run_polling()

if __name__ == '__main__':
    main()


