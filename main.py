from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

QUESTIONS = [
    {
        "question": "–¢–æ—á–∫–∞ 1 ‚Äî –ü–æ—á–∞—Ç–æ–∫\n\n¬´–í—Å–µ –º–∞—î –ø–æ—á–∞—Ç–æ–∫ ‚Äî –Ω–∞–≤—ñ—Ç—å –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω—ñ—Å—Ç—å.¬ª\n\n–ó–∞–≤–¥–∞–Ω–Ω—è: –ù–∞–∑–≤–∏ –≤—É–ª–∏—Ü—é, –∑ —è–∫–æ—ó –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–∞—à –º–∞—Ä—à—Ä—É—Ç, –¥–µ —ñ –∫–∞–≤–∞, —ñ —Ñ—ñ–ª–æ—Å–æ—Ñ—ñ—è –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –ø—ñ–¥ –æ–¥–Ω–∏–º –¥–∞—Ö–æ–º.\n\nüìå _–ü—ñ–¥–∫–∞–∑–∫–∞:_ –ù–∞–∑–≤–∞ –≤—É–ª–∏—Ü—ñ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –Ω–∞ –ú —ñ –º–∞—î –ø–æ–¥–≤—ñ–π–Ω–µ ‚Äú–ª‚Äù.",
        "answer": "–º—é–ª–ª–µ—Ä—à—Ç—Ä–∞—Å—Å–µ"
    },
    {
        "question": "–¢–æ—á–∫–∞ 2 ‚Äî –û–ø—Ç–∏–∫–∞ –º–∏—Å–ª–µ–Ω–Ω—è\n\n¬´–°–≤—ñ—Ç–ª–æ ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ö–≤–∏–ª—è. –¶–µ —ñ–¥–µ—è.¬ª\n\n–ó–∞–≤–¥–∞–Ω–Ω—è: –ó–Ω–∞–π–¥–∏ –±—É–¥—ñ–≤–ª—é, –¥–µ –¥–æ—Å–ª—ñ–¥–∂—É–≤–∞–ª–∏ —Å–≤—ñ—Ç–ª–æ —ñ —Ç–µ–æ—Ä—ñ—ó –ø—Ä–æ—Å—Ç–æ—Ä—É. –¢–∞–º –ø—Ä–∞—Ü—é–≤–∞–ª–∏ —Ç—ñ, —Ö—Ç–æ –±–∞—á–∏–≤ –≥–ª–∏–±—à–µ –∑–∞ —ñ–Ω—à–∏—Ö.\n\nüìå _–ü—ñ–¥–∫–∞–∑–∫–∞:_ –¶–µ —ñ–Ω—Å—Ç–∏—Ç—É—Ç, —â–æ –º–∞—î –≤ –Ω–∞–∑–≤—ñ —Å–ª–æ–≤–æ ¬´–æ–ø—Ç–∏–∫–∞¬ª.",
        "answer": "—ñ–Ω—Å—Ç–∏—Ç—É—Ç –æ–ø—Ç–∏–∫–∏"
    },
    {
        "question": "–¢–æ—á–∫–∞ 3 ‚Äî –ì—ñ–º–Ω–∞–∑—ñ—è –∑–Ω–∞–Ω—å\n\n¬´–û—Å–≤—ñ—Ç–∞ ‚Äî —Ü–µ —Ç–µ, —â–æ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è, –∫–æ–ª–∏ –≤—Å–µ –≤–∏–≤—á–µ–Ω–µ –∑–∞–±—É—Ç–æ.¬ª\n\n–ó–∞–≤–¥–∞–Ω–Ω—è: –ù–∞–∑–≤–∏ —Ç–∏–ø —à–∫–æ–ª–∏, –¥–µ –≤—á–∏–≤—Å—è —é–Ω–∏–π –ï–π–Ω—à—Ç–µ–π–Ω, –ø–æ—Ä—É—á —ñ–∑ —Å—Ç–∞—Ä–∏–º–∏ –º—É—Ä–∞–º–∏.\n\nüìå _–ü—ñ–¥–∫–∞–∑–∫–∞:_ –¶–µ –≥—ñ–º–Ω–∞–∑—ñ—è, –Ω–∞–∑–≤–∞–Ω–∞ –Ω–∞ —á–µ—Å—Ç—å –ø–æ–µ—Ç–∞ –∞–±–æ —Ñ—ñ–ª–æ—Å–æ—Ñ–∞.",
        "answer": "–ª—é–¥–≤—ñ–≥—Å–≥—ñ–º–Ω–∞–∑—ñ—è"
    }
]

user_states = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_states[user_id] = 0
    await update.message.reply_text("üîê –í—ñ—Ç–∞—é –≤ –∫–≤–µ—Å—Ç—ñ ¬´–ö–æ–¥ –ï–π–Ω—à—Ç–µ–π–Ω–∞¬ª!\n\n" + QUESTIONS[0]["question"])

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip().lower()

    if user_id not in user_states:
        await update.message.reply_text("–ù–∞–ø–∏—à—ñ—Ç—å /start, —â–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É.")
        return

    idx = user_states[user_id]
    if text == QUESTIONS[idx]["answer"]:
        idx += 1
        if idx == len(QUESTIONS):
            await update.message.reply_text("üéâ –í—ñ—Ç–∞—é! –í–∏ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞ —Ä–æ–∑–≥–∞–¥–∞–ª–∏ –ö–æ–¥ –ï–π–Ω—à—Ç–µ–π–Ω–∞!")
            del user_states[user_id]
        else:
            user_states[user_id] = idx
            await update.message.reply_text("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!\n\n" + QUESTIONS[idx]["question"])
    else:
        await update.message.reply_text("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ —É–≤–∞–∂–Ω–æ –ø—ñ–¥–∫–∞–∑–∫—É —É –∑–∞–≤–¥–∞–Ω–Ω—ñ.")

def main():
    application = ApplicationBuilder().token("YOUR_BOT_TOKEN").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))

    application.run_polling()

if __name__ == "__main__":
    main()
